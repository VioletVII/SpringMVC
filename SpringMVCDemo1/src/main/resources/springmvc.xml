<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        https://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!--  开启注解扫描   -->
    <context:component-scan base-package="mvc.controller"/>
    <!--   配置Thymeleaf视图解析器   -->
    <bean id="viewResolver" class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <property name="order" value="1"/>
        <property name="characterEncoding" value="UTF-8"/>
        <property name="templateEngine">
            <bean class="org.thymeleaf.spring5.SpringTemplateEngine">
                <property name="templateResolver">
                    <bean class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
                        <!--   视图前缀   -->
                        <property name="prefix" value="/WEB-INF/templates/"/>
                        <!--   视图后缀   -->
                        <property name="suffix" value=".html"/>
                        <property name="templateMode" value="HTML5"/>
                        <property name="characterEncoding" value="UTF-8"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <!--
            path:设置处理的请求地址
            view-name:设置请求地址所对应的视图名称
            只能用来设置页面的跳转
         -->
    <mvc:view-controller path="/" view-name="index"/> <!--可以正常运行-->
    <mvc:view-controller path="/file" view-name="file"/>
    <mvc:view-controller path="/interceptor" view-name="interceptor"/>
    <!--     <mvc:view-controller path="/test_user" view-name="success"></mvc:view-controller> -->
    <!--     <mvc:view-controller path="/test_view" view-name="test_view"></mvc:view-controller> -->
    <!-- 当SpringMVC中设置任何一个view-controller时，其他控制器中的请求映射将全部失效，
        此时需要在SpringMVC的核心配置文件中设置开启mvc注解驱动的标签：  -->
    <mvc:annotation-driven/>
    <!-- 开发对静态资源的访问 -->
    <mvc:default-servlet-handler/>
    <!--对web/static/ 的静态资源创建映射-->
    <mvc:resources location="/static/" mapping="/static/**"/>



    <!--必须通过文件解析器的解析才能将文件转换为MultipartFile对象-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"></bean>

    <!--配置拦截器-->
    <mvc:interceptors>
        <!--对所有的请求都进行拦截-->
<!--        <bean class="mvc.controller.Interceptor.FirstInterceptor"/>-->
<!--        <ref bean="firstInterceptor"/>-->
        <!--以上对所有请求进行拦截，除了index之外
        /* 不会拦截多层目录的请求
        /** 拦截所有的请求
        -->
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/"/>
            <ref bean="firstInterceptor"/>
        </mvc:interceptor>
<!--
	以上配置方式可以通过ref或bean标签设置拦截器，通过mvc:mapping设置需要拦截的请求，通过mvc:exclude-mapping设置需要排除的请求，即不需要拦截的请求
-->
    </mvc:interceptors>

    <!--配置异常处理器-->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <!--exceptionMappings 提供出现异常时的页面跳转-->
        <property name="exceptionMappings">
            <props>
                <!--
        		prop的键表示处理器方法执行过程中出现的异常
        		prop的值表示若出现指定异常时，设置一个新的视图名称，跳转到指定页面
        	    -->
                <prop key="java.lang.ArithmeticException">error</prop>
            </props>
        </property>
        <!--
    	exceptionAttribute属性设置一个属性名，将出现的异常信息在请求域中进行共享
        -->
        <property name="exceptionAttribute" value="exceptionMessage"></property>
    </bean>
</beans>